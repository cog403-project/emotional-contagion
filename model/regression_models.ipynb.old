{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Import"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import subprocess\n",
    "import shlex\n",
    "import os.path\n",
    "import sys\n",
    "import pickle\n",
    "import datetime\n",
    "import tweepy\n",
    "import matplotlib.pyplot as plt \n",
    "import numpy as np\n",
    "from scipy import spatial  \n",
    "from sklearn.metrics import r2_score\n",
    "import string\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import collections\n",
    "from itertools import tee, islice\n",
    "from sklearn.decomposition import PCA\n",
    "import math"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Other Helper Functions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_list_of_users(tweets):\n",
    "\n",
    "    list_of_user = []\n",
    "\n",
    "    for tweet in tweets:\n",
    "        user_id = tweet.user.id\n",
    "        if user_id not in list_of_user:\n",
    "            list_of_user.append(user_id)\n",
    "\n",
    "    return list_of_user"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Import Tweet and Related Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Where you want to save the coverted files # TO BE REMOVED\n",
    "test_directory = \"\" "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Location of all the \".p\" files containing tweets of friends\n",
    "directory = \"L:/Users/Daniel/Documents/2020-2021/2021 Winter Courses/COG403/Assignments/Project/Python Tweets/\" \n",
    "\n",
    "# Location of sentiment analysis file\n",
    "sentiment_directory = \"L:/Users/Daniel/Documents/2020-2021/2021 Winter Courses/COG403/Assignments/Project/Python Tweets/Sentiment/\"\n",
    "analyzed_users = \"L:/Users/Daniel/Documents/2020-2021/2021 Winter Courses/COG403/Assignments/Project/Python Tweets/data_analyzed_1.p\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Tweets output from the function, get_inital_tweets\n",
    "initial_tweet_file = directory + 'user_tweet_large.p'\n",
    "initial_tweets = pickle.load(open(initial_tweet_file, \"rb\"))\n",
    "trending_tweet_file = directory + 'trending_tweets.p'\n",
    "trending_tweets = pickle.load(open(trending_tweet_file, \"rb\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "740\n"
     ]
    }
   ],
   "source": [
    "print(len(trending_tweets))\n",
    "list_of_users = get_list_of_users(trending_tweets)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Don't use this if using above\n",
    "already_analyzed = pickle.load(open(analyzed_users, \"rb\"))\n",
    "list_of_users = []\n",
    "\n",
    "for uid in already_analyzed:\n",
    "    list_of_users.append(uid)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Regression Models - Simple"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x13a86445940>]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plot relationship between tweet sentiment and environment sentiment\n",
    "    \n",
    "x_array = []\n",
    "y_array = []\n",
    "\n",
    "# Analyze all the  users in initial_tweets, for every tweet, plot the tweet sentiment and the average\n",
    "# environment sentiment (one value for all post by friends)\n",
    "for user in list_of_users:\n",
    "    \n",
    "    file_name = sentiment_directory + str(user) + '_avg.p'\n",
    "    \n",
    "    if os.path.exists(file_name):\n",
    "        \n",
    "        tweet_sentiment = pickle.load(open(file_name, \"rb\"))\n",
    "        \n",
    "        for tweet_id in tweet_sentiment:\n",
    "            if 'friend' in tweet_sentiment[tweet_id]:\n",
    "                x_array.append(tweet_sentiment[tweet_id]['combined'])\n",
    "                y_array.append(tweet_sentiment[tweet_id]['friend'])\n",
    "                plt.scatter(tweet_sentiment[tweet_id]['combined'], tweet_sentiment[tweet_id]['friend'])\n",
    "            \n",
    "# Line of best fit\n",
    "mymodel = np.poly1d(np.polyfit(x_array, y_array, 3))\n",
    "myline = np.linspace(-3, 4, 100)\n",
    "plt.plot(myline, mymodel(myline))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x1c6f62e9518>"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Tweet Sentiment from Environment\n",
    "plt.scatter(y_array, x_array)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x13a9aa1e860>]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Analyze all the  users in initial_tweets, for every tweet, plot the tweet sentiment and the average\n",
    "# environment sentiment (one value for all post by friends)\n",
    "for user in list_of_users:\n",
    "    \n",
    "    file_name = sentiment_directory + str(user) + '_avg.p'\n",
    "    \n",
    "    if os.path.exists(file_name):\n",
    "        \n",
    "        tweet_sentiment = pickle.load(open(file_name, \"rb\"))\n",
    "        \n",
    "        for tweet_id in tweet_sentiment:\n",
    "            if 'friend' in tweet_sentiment[tweet_id]:\n",
    "                plt.scatter(tweet_sentiment[tweet_id]['friend'], tweet_sentiment[tweet_id]['combined'])\n",
    "            \n",
    "# Line of best fit - 7 degree\n",
    "mymodel = np.poly1d(np.polyfit(x_array, y_array, 7))\n",
    "myline = np.linspace(-3, 4, 100)\n",
    "plt.xlabel(\"Environment Sentiment Score\")\n",
    "plt.ylabel(\"Tweet Sentiment Score\")\n",
    "plt.plot(myline, mymodel(myline))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Convert into numpy array\n",
    "x_array = np.array(x_array)\n",
    "y_array = np.array(y_array)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.0019823011039523664\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Linear Model\n",
    "\n",
    "mymodel = np.poly1d(np.polyfit(y_array, x_array, 1))\n",
    "myline = np.linspace(-3, 4, 100)\n",
    "plt.xlabel(\"Environment Sentiment Score\")\n",
    "plt.ylabel(\"Tweet Sentiment Score\")\n",
    "plt.plot(myline, mymodel(myline))\n",
    "\n",
    "# r^2 score for linear model\n",
    "print(r2_score(x_array, mymodel(y_array)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.0019824945197901567\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Polynomial - Degree 2\n",
    "\n",
    "mymodel_2 = np.poly1d(np.polyfit(y_array, x_array, 2))\n",
    "plt.xlabel(\"Environment Sentiment Score\")\n",
    "plt.ylabel(\"Tweet Sentiment Score\")\n",
    "plt.plot(myline, mymodel_2(myline))\n",
    "\n",
    "# r^2 score for linear model\n",
    "print(r2_score(x_array, mymodel_2(y_array)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.002764008351138436\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Polynomial - Degree 3\n",
    "\n",
    "mymodel_3 = np.poly1d(np.polyfit(y_array, x_array, 3))\n",
    "plt.xlabel(\"Environment Sentiment Score\")\n",
    "plt.ylabel(\"Tweet Sentiment Score\")\n",
    "plt.plot(myline, mymodel_3(myline))\n",
    "\n",
    "# r^2 score for linear model\n",
    "print(r2_score(x_array, mymodel_3(y_array)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.0027839864976439976\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Polynomial - Degree 4\n",
    "\n",
    "mymodel_4 = np.poly1d(np.polyfit(y_array, x_array, 4))\n",
    "plt.xlabel(\"Environment Sentiment Score\")\n",
    "plt.ylabel(\"Tweet Sentiment Score\")\n",
    "plt.plot(myline, mymodel_4(myline))\n",
    "\n",
    "# r^2 score for linear model\n",
    "print(r2_score(x_array, mymodel_4(y_array)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.0030478226761996297\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Polynomial - Degree 5\n",
    "\n",
    "mymodel_5 = np.poly1d(np.polyfit(y_array, x_array, 5))\n",
    "plt.xlabel(\"Environment Sentiment Score\")\n",
    "plt.ylabel(\"Tweet Sentiment Score\")\n",
    "plt.plot(myline, mymodel_5(myline))\n",
    "\n",
    "# r^2 score for linear model\n",
    "print(r2_score(x_array, mymodel_5(y_array)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.0030531785896230623\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Polynomial - Degree 6\n",
    "\n",
    "mymodel_6 = np.poly1d(np.polyfit(y_array, x_array, 6))\n",
    "plt.xlabel(\"Environment Sentiment Score\")\n",
    "plt.ylabel(\"Tweet Sentiment Score\")\n",
    "plt.plot(myline, mymodel_6(myline))\n",
    "\n",
    "# r^2 score for linear model\n",
    "print(r2_score(x_array, mymodel_6(y_array)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.0031231369907090967\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Polynomial - Degree 7\n",
    "\n",
    "mymodel_7 = np.poly1d(np.polyfit(y_array, x_array, 7))\n",
    "plt.xlabel(\"Environment Sentiment Score\")\n",
    "plt.ylabel(\"Tweet Sentiment Score\")\n",
    "plt.plot(myline, mymodel_6(myline))\n",
    "\n",
    "# r^2 score for linear model\n",
    "print(r2_score(x_array, mymodel_7(y_array)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Predictive Accuracy - Predicting Type of Tweets"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Prep for Testing Model\n",
    "result = {}\n",
    "\n",
    "NZ_tweet_dir = \"L:/Users/Daniel/Documents/2020-2021/2021 Winter Courses/COG403/Assignments/Project/Partner Code/\"\n",
    "predictive_model = \"L:/Users/Daniel/Documents/2020-2021/2021 Winter Courses/COG403/Assignments/Project/Partner Code/Sentiment/\"\n",
    "\n",
    "#tweet_file_name = predictive_model  + 'user_tweet_large_NZ_1.p'\n",
    "#predictive_user_tweets = pickle.load(open(tweet_file_name, \"rb\"))\n",
    "\n",
    "trending_tweet_file_NZ = NZ_tweet_dir + 'trending_tweets_NZ.p'\n",
    "trending_tweets_NZ = pickle.load(open(trending_tweet_file_NZ, \"rb\"))\n",
    "\n",
    "list_of_users_NZ = get_list_of_users(trending_tweets_NZ)\n",
    "\n",
    "analyzed_users_NZ = predictive_model  + 'data_analyzed_1.p'\n",
    "already_analyzed_NZ = pickle.load(open(analyzed_users_NZ, \"rb\"))\n",
    "\n",
    "for uid in already_analyzed_NZ:\n",
    "    if uid not in list_of_users_NZ:\n",
    "        list_of_users_NZ.append(uid)\n",
    "        \n",
    "#print(len(list_of_users_NZ))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [],
   "source": [
    "accurate = 0\n",
    "total = 0\n",
    "\n",
    "for user in list_of_users_NZ:\n",
    "    \n",
    "    file_name = predictive_model + str(user) + '_avg.p'\n",
    "    \n",
    "    if os.path.exists(file_name):\n",
    "        \n",
    "        tweet_sentiment = pickle.load(open(file_name, \"rb\"))\n",
    "        \n",
    "        for tweet_id in tweet_sentiment:\n",
    "            if 'friend' in tweet_sentiment[tweet_id]:\n",
    "                total += 1\n",
    "                tweet_sent = tweet_sentiment[tweet_id]['combined']\n",
    "                friend_sent = tweet_sentiment[tweet_id]['friend']\n",
    "                \n",
    "                prediction = math.ceil(mymodel_7(friend_sent))\n",
    "                \n",
    "                if prediction == tweet_sent:\n",
    "                    accurate += 1\n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.2430286599535244\n"
     ]
    }
   ],
   "source": [
    "print(accurate/total)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Predict type of tweet\n",
    "total_count = 0\n",
    "accurate = 0\n",
    "\n",
    "p_total = 0\n",
    "p_acc = 0\n",
    "\n",
    "n_total = 0\n",
    "n_acc = 0\n",
    "\n",
    "ne_total = 0\n",
    "ne_acc = 0\n",
    "\n",
    "pos_total = 0\n",
    "neg_total = 0\n",
    "neu_total = 0\n",
    "\n",
    "p_miss = 0\n",
    "n_miss = 0\n",
    "ne_miss = 0\n",
    "\n",
    "for user in list_of_users_NZ:\n",
    "    \n",
    "    file_name = predictive_model + str(user) + '_avg.p'\n",
    "    \n",
    "    if os.path.exists(file_name):\n",
    "        \n",
    "        tweet_sentiment = pickle.load(open(file_name, \"rb\"))\n",
    "        \n",
    "        for tweet_id in tweet_sentiment:\n",
    "            if 'friend' in tweet_sentiment[tweet_id]:\n",
    "                \n",
    "                tweet_sent = tweet_sentiment[tweet_id]['combined']\n",
    "                friend_sent = tweet_sentiment[tweet_id]['friend']\n",
    "                \n",
    "                if tweet_sent != 0:\n",
    "                    total_count += 1\n",
    "                \n",
    "                    prediction = mymodel_7(friend_sent)\n",
    "                    # Base val is the value when sentiment is 0, as predicted by the model\n",
    "                    base_val = mymodel_7(0)\n",
    "                    \n",
    "                    if prediction < base_val:\n",
    "                        prediction = -1\n",
    "                    else:\n",
    "                        prediction = 1\n",
    "\n",
    "                    if tweet_sent > 0:\n",
    "                        p_total += 1\n",
    "                        \n",
    "                        if prediction > 0:\n",
    "                            accurate += 1\n",
    "                            pos_total += 1\n",
    "                            p_acc += 1\n",
    "                        elif prediction < 0:\n",
    "                            neg_total += 1\n",
    "                            p_miss += 1\n",
    "                            \n",
    "                    elif tweet_sent < 0:\n",
    "                        \n",
    "                        n_total += 1\n",
    "                        if prediction < 0:\n",
    "                            accurate += 1\n",
    "                            neg_total+= 1\n",
    "                            n_acc += 1\n",
    "                        elif prediction > 0:\n",
    "                            pos_total+= 1\n",
    "                            n_miss += 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.5869817900038745\n",
      "Total Post 2581\n",
      "Positive Post 1550\n",
      "Negative Post 1031\n",
      "Positive Accurate Predict 1161\n",
      "Negative Accurate Predict 354\n",
      "# of positive prediction 1838\n",
      "# of negative prediction 743\n",
      "# of positive miss 389\n",
      "# of negative miss 677\n"
     ]
    }
   ],
   "source": [
    "print(accurate/total_count)\n",
    "print(\"Total Post \" + str(total_count))\n",
    "print(\"Positive Post \" + str(p_total))\n",
    "print(\"Negative Post \" + str(n_total))\n",
    "print(\"Positive Accurate Predict \"+ str(p_acc))\n",
    "print(\"Negative Accurate Predict \"+ str(n_acc))\n",
    "print(\"# of positive prediction \" + str(pos_total))\n",
    "print(\"# of negative prediction \" + str(neg_total))\n",
    "print(\"# of positive miss \" + str(p_miss))\n",
    "print(\"# of negative miss \" + str(n_miss))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Filter neutral tweets and predict positive from negative\n",
    "total_count = 0\n",
    "accurate = 0\n",
    "\n",
    "p_total = 0\n",
    "p_acc = 0\n",
    "\n",
    "n_total = 0\n",
    "n_acc = 0\n",
    "\n",
    "ne_total = 0\n",
    "ne_acc = 0\n",
    "\n",
    "pos_total = 0\n",
    "neg_total = 0\n",
    "neu_total = 0\n",
    "\n",
    "p_miss = 0\n",
    "n_miss = 0\n",
    "ne_miss = 0\n",
    "\n",
    "for user in list_of_users_NZ:\n",
    "    \n",
    "    file_name = predictive_model + str(user) + '_avg.p'\n",
    "    \n",
    "    if os.path.exists(file_name):\n",
    "        \n",
    "        tweet_sentiment = pickle.load(open(file_name, \"rb\"))\n",
    "        \n",
    "        for tweet_id in tweet_sentiment:\n",
    "            if 'friend' in tweet_sentiment[tweet_id]:\n",
    "                \n",
    "                tweet_sent = tweet_sentiment[tweet_id]['combined']\n",
    "                friend_sent = tweet_sentiment[tweet_id]['friend']\n",
    "                \n",
    "                if tweet_sent != 0:\n",
    "                    total_count += 1\n",
    "                \n",
    "                    prediction = mymodel(friend_sent)\n",
    "                    # Base val is the value when sentiment is 0, as predicted by the model\n",
    "                    base_val = mymodel(0)\n",
    "                    \n",
    "                    if -1 < prediction < base_val:\n",
    "                        prediction = -1\n",
    "                    elif prediction <= -1:\n",
    "                        prediction = math.floor(mymodel(friend_sent))\n",
    "                    else:\n",
    "                        prediction = math.ceil(mymodel(friend_sent))\n",
    "\n",
    "                    if tweet_sent > 0:\n",
    "                        p_total += 1\n",
    "                        \n",
    "                        if prediction > 0:\n",
    "                            accurate += 1\n",
    "                            pos_total += 1\n",
    "                            p_acc += 1\n",
    "                        elif prediction < 0:\n",
    "                            neg_total += 1\n",
    "                            p_miss += 1\n",
    "                            \n",
    "                    elif tweet_sent < 0:\n",
    "                        \n",
    "                        n_total += 1\n",
    "                        if prediction < 0:\n",
    "                            accurate += 1\n",
    "                            neg_total+= 1\n",
    "                            n_acc += 1\n",
    "                        elif prediction > 0:\n",
    "                            pos_total+= 1\n",
    "                            n_miss += 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.5869817900038745\n",
      "Total Post 2581\n",
      "Positive Post 1550\n",
      "Negative Post 1031\n",
      "Positive Accurate Predict 1161\n",
      "Negative Accurate Predict 354\n",
      "# of positive prediction 1838\n",
      "# of negative prediction 743\n",
      "# of positive miss 389\n",
      "# of negative miss 677\n"
     ]
    }
   ],
   "source": [
    "print(accurate/total_count)\n",
    "print(\"Total Post \" + str(total_count))\n",
    "print(\"Positive Post \" + str(p_total))\n",
    "print(\"Negative Post \" + str(n_total))\n",
    "print(\"Positive Accurate Predict \"+ str(p_acc))\n",
    "print(\"Negative Accurate Predict \"+ str(n_acc))\n",
    "print(\"# of positive prediction \" + str(pos_total))\n",
    "print(\"# of negative prediction \" + str(neg_total))\n",
    "print(\"# of positive miss \" + str(p_miss))\n",
    "print(\"# of negative miss \" + str(n_miss))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Sentiment Score Prediction"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.11802311196544203\n",
      "0.13437961485494043\n",
      "0.15073611774443885\n",
      "0.16709262063393723\n",
      "0.18344912352343565\n",
      "0.19980562641293406\n",
      "0.21616212930243245\n",
      "0.23251863219193086\n",
      "0.24887513508142928\n"
     ]
    }
   ],
   "source": [
    "# Predict all, excluding neutral tweets\n",
    "total_count = 0\n",
    "accurate = 0\n",
    "\n",
    "p_total = 0\n",
    "p_acc = 0\n",
    "\n",
    "n_total = 0\n",
    "n_acc = 0\n",
    "\n",
    "ne_total = 0\n",
    "ne_acc = 0\n",
    "\n",
    "pos_total = 0\n",
    "neg_total = 0\n",
    "neu_total = 0\n",
    "\n",
    "p_miss = 0\n",
    "n_miss = 0\n",
    "ne_miss = 0\n",
    "\n",
    "# Base val is the value when sentiment is 0, 1, 2, 3, as predicted by model\n",
    "base_val = []\n",
    "                    \n",
    "for i in range(-4, 5):\n",
    "    base_val.append(mymodel(i))\n",
    "    print(mymodel(i))\n",
    "\n",
    "for user in list_of_users_NZ:\n",
    "    \n",
    "    file_name = predictive_model + str(user) + '_avg.p'\n",
    "    \n",
    "    if os.path.exists(file_name):\n",
    "        \n",
    "        tweet_sentiment = pickle.load(open(file_name, \"rb\"))\n",
    "        \n",
    "        for tweet_id in tweet_sentiment:\n",
    "            if 'friend' in tweet_sentiment[tweet_id]:\n",
    "                \n",
    "                tweet_sent = tweet_sentiment[tweet_id]['combined']\n",
    "                friend_sent = tweet_sentiment[tweet_id]['friend']\n",
    "                \n",
    "                if tweet_sent != 0:\n",
    "                    total_count += 1\n",
    "                \n",
    "                    prediction = mymodel(friend_sent)\n",
    "                    \n",
    "                    if base_val[0] <= prediction < base_val[1]:\n",
    "                        prediction = -4\n",
    "                    elif base_val[1] <= prediction < base_val[2]:\n",
    "                        prediction = -3\n",
    "                    elif base_val[2] <= prediction < base_val[3]:\n",
    "                        prediction = -2\n",
    "                    elif base_val[3] <= prediction < base_val[4]:\n",
    "                        prediction = -1\n",
    "                    elif base_val[4] <= prediction < base_val[5]:\n",
    "                        prediction = 0\n",
    "                    elif base_val[5] <= prediction < base_val[6]:\n",
    "                        prediction = 1\n",
    "                    elif base_val[6] <= prediction < base_val[7]:\n",
    "                        prediction = 2\n",
    "                    elif base_val[7]<= prediction < base_val[8]:\n",
    "                        prediction = 3\n",
    "                    else:\n",
    "                        prediction = 4\n",
    "\n",
    "                    #rint (prediction, tweet_sent)\n",
    "                    \n",
    "                    if tweet_sent > 0:\n",
    "                        p_total += 1\n",
    "                        \n",
    "                        if prediction == tweet_sent:\n",
    "                            accurate += 1\n",
    "                            pos_total += 1\n",
    "                            p_acc += 1\n",
    "                        elif prediction < 0:\n",
    "                            neg_total += 1\n",
    "                            p_miss += 1\n",
    "                            \n",
    "                    elif tweet_sent < 0:\n",
    "                        \n",
    "                        n_total += 1\n",
    "                        if prediction == tweet_sent:\n",
    "                            accurate += 1\n",
    "                            neg_total+= 1\n",
    "                            n_acc += 1\n",
    "                        elif prediction > 0:\n",
    "                            pos_total+= 1\n",
    "                            n_miss += 1\n",
    "                            \n",
    "                    else:\n",
    "                        if prediction == tweet_sent:\n",
    "                            accurate += 1\n",
    "                        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.09724912824486633\n",
      "Total Post 2581\n",
      "Positive Post 1550\n",
      "Negative Post 1031\n",
      "Positive Accurate Predict 48\n",
      "Negative Accurate Predict 203\n",
      "# of positive prediction 86\n",
      "# of negative prediction 592\n",
      "# of positive miss 389\n",
      "# of negative miss 38\n"
     ]
    }
   ],
   "source": [
    "print(accurate/total_count)\n",
    "print(\"Total Post \" + str(total_count))\n",
    "print(\"Positive Post \" + str(p_total))\n",
    "print(\"Negative Post \" + str(n_total))\n",
    "print(\"Positive Accurate Predict \"+ str(p_acc))\n",
    "print(\"Negative Accurate Predict \"+ str(n_acc))\n",
    "print(\"# of positive prediction \" + str(pos_total))\n",
    "print(\"# of negative prediction \" + str(neg_total))\n",
    "print(\"# of positive miss \" + str(p_miss))\n",
    "print(\"# of negative miss \" + str(n_miss))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.11802311196544203\n",
      "0.13437961485494043\n",
      "0.15073611774443885\n",
      "0.16709262063393723\n",
      "0.18344912352343565\n",
      "0.19980562641293406\n",
      "0.21616212930243245\n",
      "0.23251863219193086\n",
      "0.24887513508142928\n"
     ]
    }
   ],
   "source": [
    "# Predict all including neutral tweet\n",
    "total_count = 0\n",
    "accurate = 0\n",
    "\n",
    "p_total = 0\n",
    "p_acc = 0\n",
    "\n",
    "n_total = 0\n",
    "n_acc = 0\n",
    "\n",
    "ne_total = 0\n",
    "ne_acc = 0\n",
    "\n",
    "pos_total = 0\n",
    "neg_total = 0\n",
    "neu_total = 0\n",
    "\n",
    "p_miss = 0\n",
    "n_miss = 0\n",
    "ne_miss = 0\n",
    "\n",
    "# Base val is the value when sentiment is 0, 1, 2, 3, as predicted by model\n",
    "base_val = []\n",
    "                    \n",
    "for i in range(-4, 5):\n",
    "    base_val.append(mymodel(i))\n",
    "    print(mymodel(i))\n",
    "\n",
    "for user in list_of_users_NZ:\n",
    "    \n",
    "    file_name = predictive_model + str(user) + '_avg.p'\n",
    "    \n",
    "    if os.path.exists(file_name):\n",
    "        \n",
    "        tweet_sentiment = pickle.load(open(file_name, \"rb\"))\n",
    "        \n",
    "        for tweet_id in tweet_sentiment:\n",
    "            if 'friend' in tweet_sentiment[tweet_id]:\n",
    "                \n",
    "                tweet_sent = tweet_sentiment[tweet_id]['combined']\n",
    "                friend_sent = tweet_sentiment[tweet_id]['friend']\n",
    "                \n",
    "                if tweet_sent != 10:\n",
    "                    total_count += 1\n",
    "                \n",
    "                    prediction = mymodel(friend_sent)\n",
    "                    \n",
    "                    if base_val[0] <= prediction < base_val[1]:\n",
    "                        prediction = -4\n",
    "                    elif base_val[1] <= prediction < base_val[2]:\n",
    "                        prediction = -3\n",
    "                    elif base_val[2] <= prediction < base_val[3]:\n",
    "                        prediction = -2\n",
    "                    elif base_val[3] <= prediction < base_val[4]:\n",
    "                        prediction = -1\n",
    "                    elif base_val[4] <= prediction < base_val[5]:\n",
    "                        prediction = 0\n",
    "                    elif base_val[5] <= prediction < base_val[6]:\n",
    "                        prediction = 1\n",
    "                    elif base_val[6] <= prediction < base_val[7]:\n",
    "                        prediction = 2\n",
    "                    elif base_val[7]<= prediction < base_val[8]:\n",
    "                        prediction = 3\n",
    "                    else:\n",
    "                        prediction = 4\n",
    "\n",
    "                    #rint (prediction, tweet_sent)\n",
    "                    \n",
    "                    if tweet_sent > 0:\n",
    "                        p_total += 1\n",
    "                        \n",
    "                        if prediction == tweet_sent:\n",
    "                            accurate += 1\n",
    "                            pos_total += 1\n",
    "                            p_acc += 1\n",
    "                        elif prediction < 0:\n",
    "                            neg_total += 1\n",
    "                            p_miss += 1\n",
    "                            \n",
    "                    elif tweet_sent < 0:\n",
    "                        \n",
    "                        n_total += 1\n",
    "                        if prediction == tweet_sent:\n",
    "                            accurate += 1\n",
    "                            neg_total+= 1\n",
    "                            n_acc += 1\n",
    "                        elif prediction > 0:\n",
    "                            pos_total+= 1\n",
    "                            n_miss += 1\n",
    "                            \n",
    "                    else:\n",
    "                        if prediction == tweet_sent:\n",
    "                            accurate += 1\n",
    "                        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.38884585592563903\n",
      "Total Post 5164\n",
      "Positive Post 1550\n",
      "Negative Post 1031\n",
      "Positive Accurate Predict 48\n",
      "Negative Accurate Predict 203\n",
      "# of positive prediction 86\n",
      "# of negative prediction 592\n",
      "# of positive miss 389\n",
      "# of negative miss 38\n"
     ]
    }
   ],
   "source": [
    "print(accurate/total_count)\n",
    "print(\"Total Post \" + str(total_count))\n",
    "print(\"Positive Post \" + str(p_total))\n",
    "print(\"Negative Post \" + str(n_total))\n",
    "print(\"Positive Accurate Predict \"+ str(p_acc))\n",
    "print(\"Negative Accurate Predict \"+ str(n_acc))\n",
    "print(\"# of positive prediction \" + str(pos_total))\n",
    "print(\"# of negative prediction \" + str(neg_total))\n",
    "print(\"# of positive miss \" + str(p_miss))\n",
    "print(\"# of negative miss \" + str(n_miss))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Different model\n",
    "total_count = 0\n",
    "accurate = 0\n",
    "\n",
    "p_total = 0\n",
    "p_acc = 0\n",
    "\n",
    "n_total = 0\n",
    "n_acc = 0\n",
    "\n",
    "ne_total = 0\n",
    "ne_acc = 0\n",
    "\n",
    "pos_total = 0\n",
    "neg_total = 0\n",
    "neu_total = 0\n",
    "\n",
    "p_miss = 0\n",
    "n_miss = 0\n",
    "ne_miss = 0\n",
    "\n",
    "for user in list_of_users_NZ:\n",
    "    \n",
    "    file_name = predictive_model + str(user) + '_avg.p'\n",
    "    \n",
    "    if os.path.exists(file_name):\n",
    "        \n",
    "        tweet_sentiment = pickle.load(open(file_name, \"rb\"))\n",
    "        \n",
    "        for tweet_id in tweet_sentiment:\n",
    "            if 'friend' in tweet_sentiment[tweet_id]:\n",
    "                \n",
    "                tweet_sent = tweet_sentiment[tweet_id]['combined']\n",
    "                friend_sent = tweet_sentiment[tweet_id]['friend']\n",
    "                \n",
    "                if tweet_sent != 0:\n",
    "                    total_count += 1\n",
    "                \n",
    "                    prediction = mymodel_4(friend_sent)\n",
    "                    # Base val is the value when sentiment is 0, as predicted by the model\n",
    "                    base_val = []\n",
    "                    \n",
    "                    for i in range(-4, 5):\n",
    "                        base_val.append(mymodel_4(i))\n",
    "                    \n",
    "                    if base_val[0] <= prediction < base_val[1]:\n",
    "                        prediction = -4\n",
    "                    elif base_val[1] <= prediction < base_val[2]:\n",
    "                        prediction = -3\n",
    "                    elif base_val[2] <= prediction < base_val[3]:\n",
    "                        prediction = -2\n",
    "                    elif base_val[3] <= prediction < base_val[4]:\n",
    "                        prediction = -1\n",
    "                    elif base_val[4] <= prediction < base_val[5]:\n",
    "                        prediction = 0\n",
    "                    elif base_val[5] <= prediction < base_val[6]:\n",
    "                        prediction = 1\n",
    "                    elif base_val[6] <= prediction < base_val[7]:\n",
    "                        prediction = 2\n",
    "                    elif base_val[7]<= prediction < base_val[8]:\n",
    "                        prediction = 3\n",
    "                    else:\n",
    "                        prediction = 4\n",
    "\n",
    "                    #rint (prediction, tweet_sent)\n",
    "                    \n",
    "                    if tweet_sent > 0:\n",
    "                        p_total += 1\n",
    "                        \n",
    "                        if prediction == tweet_sent:\n",
    "                            accurate += 1\n",
    "                            pos_total += 1\n",
    "                            p_acc += 1\n",
    "                        elif prediction < 0:\n",
    "                            neg_total += 1\n",
    "                            p_miss += 1\n",
    "                            \n",
    "                    elif tweet_sent < 0:\n",
    "                        \n",
    "                        n_total += 1\n",
    "                        if prediction == tweet_sent:\n",
    "                            accurate += 1\n",
    "                            neg_total+= 1\n",
    "                            n_acc += 1\n",
    "                        elif prediction > 0:\n",
    "                            pos_total+= 1\n",
    "                            n_miss += 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.0976365749709415\n",
      "Total Post 2581\n",
      "Positive Post 1550\n",
      "Negative Post 1031\n",
      "Positive Accurate Predict 48\n",
      "Negative Accurate Predict 204\n",
      "# of positive prediction 86\n",
      "# of negative prediction 593\n",
      "# of positive miss 389\n",
      "# of negative miss 38\n"
     ]
    }
   ],
   "source": [
    "print(accurate/total_count)\n",
    "print(\"Total Post \" + str(total_count))\n",
    "print(\"Positive Post \" + str(p_total))\n",
    "print(\"Negative Post \" + str(n_total))\n",
    "print(\"Positive Accurate Predict \"+ str(p_acc))\n",
    "print(\"Negative Accurate Predict \"+ str(n_acc))\n",
    "print(\"# of positive prediction \" + str(pos_total))\n",
    "print(\"# of negative prediction \" + str(neg_total))\n",
    "print(\"# of positive miss \" + str(p_miss))\n",
    "print(\"# of negative miss \" + str(n_miss))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Tweet to Environment"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.0019823011039525884\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Linear Model\n",
    "\n",
    "mymodel = np.poly1d(np.polyfit(x_array, y_array, 1))\n",
    "plt.plot(myline, mymodel(myline))\n",
    "\n",
    "# r^2 score for linear model\n",
    "print(r2_score(y_array, mymodel(x_array)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.0020011024901827046\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Polynominal - Degree 2\n",
    "\n",
    "mymodel_2 = np.poly1d(np.polyfit(x_array, y_array, 2))\n",
    "plt.plot(myline, mymodel_2(myline))\n",
    "\n",
    "print(r2_score(y_array, mymodel_2(x_array)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.0023251395438159683\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Polynominal - Degree 3\n",
    "\n",
    "mymodel_3 = np.poly1d(np.polyfit(x_array, y_array, 3))\n",
    "plt.plot(myline, mymodel_3(myline))\n",
    "\n",
    "print(r2_score(y_array, mymodel_3(x_array)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.0023928732613467396\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Polynominal - Degree 4\n",
    "\n",
    "mymodel_4 = np.poly1d(np.polyfit(x_array, y_array, 4))\n",
    "plt.plot(myline, mymodel_4(myline))\n",
    "\n",
    "print(r2_score(y_array, mymodel_4(x_array)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.0028700115591492326\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Polynominal - Degree 5\n",
    "\n",
    "mymodel_5 = np.poly1d(np.polyfit(x_array, y_array, 5))\n",
    "plt.plot(myline, mymodel_5(myline))\n",
    "\n",
    "print(r2_score(y_array, mymodel_5(x_array)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.002878702692930335\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Polynominal - Degree 6\n",
    "\n",
    "mymodel_6 = np.poly1d(np.polyfit(x_array, y_array, 6))\n",
    "plt.plot(myline, mymodel_6(myline))\n",
    "\n",
    "print(r2_score(y_array, mymodel_6(x_array)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.0029667507789638004\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Polynominal - Degree 7\n",
    "\n",
    "mymodel_7 = np.poly1d(np.polyfit(x_array, y_array, 7))\n",
    "plt.plot(myline, mymodel_7(myline))\n",
    "\n",
    "print(r2_score(y_array, mymodel_7(x_array)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.002967236868801848\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\ProgramData\\Anaconda3\\lib\\site-packages\\ipykernel_launcher.py:3: RankWarning: Polyfit may be poorly conditioned\n",
      "  This is separate from the ipykernel package so we can avoid doing imports until\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Polynominal - Degree 20\n",
    "\n",
    "mymodel_20 = np.poly1d(np.polyfit(x_array, y_array, 20))\n",
    "plt.plot(myline, mymodel_20(myline))\n",
    "\n",
    "print(r2_score(y_array, mymodel_20(x_array)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Linear Relation between Tweet and Environment"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x13ab03db160>]"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "m, b = np.polyfit(x_array, y_array, 1)\n",
    "plt.plot(x_array, m*x_array + b)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.04452304014723474\n"
     ]
    }
   ],
   "source": [
    "from scipy import stats\n",
    "\n",
    "slope, intercept, r, p, std_err = stats.linregress(x_array, y_array)\n",
    "print(r)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Linear Relation between Tweet and Environment"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.04452304014723413\n"
     ]
    }
   ],
   "source": [
    "from scipy import stats\n",
    "\n",
    "slope, intercept, r, p, std_err = stats.linregress(y_array, x_array)\n",
    "print(r)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
